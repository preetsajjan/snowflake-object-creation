{
  "version": 4,
  "terraform_version": "1.10.5",
  "serial": 305,
  "lineage": "0d80e94a-9134-a480-2863-dd1c4b7a7c16",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "snowflake_account_role",
      "name": "create_schema_role",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "comment": "CREATE SCHEMA ROLE",
            "fully_qualified_name": "\"AR_CS\"",
            "id": "AR_CS",
            "name": "AR_CS",
            "show_output": [
              {
                "assigned_to_users": 0,
                "comment": "CREATE SCHEMA ROLE",
                "created_on": "2025-02-24 02:54:07.622 -0800 PST",
                "granted_roles": 0,
                "granted_to_roles": 0,
                "is_current": false,
                "is_default": false,
                "is_inherited": false,
                "name": "AR_CS",
                "owner": "ACCOUNTADMIN"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_account_role",
      "name": "fr_roles",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "ENGR",
          "schema_version": 0,
          "attributes": {
            "comment": "Frontend role for ENGR",
            "fully_qualified_name": "\"DEV_FR_ENGR_APPLICATION_NAME\"",
            "id": "DEV_FR_ENGR_APPLICATION_NAME",
            "name": "DEV_FR_ENGR_APPLICATION_NAME",
            "show_output": [
              {
                "assigned_to_users": 1,
                "comment": "Frontend role for ENGR",
                "created_on": "2025-02-26 00:51:51.861 -0800 PST",
                "granted_roles": 1,
                "granted_to_roles": 1,
                "is_current": false,
                "is_default": false,
                "is_inherited": false,
                "name": "DEV_FR_ENGR_APPLICATION_NAME",
                "owner": "ACCOUNTADMIN"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "RDR",
          "schema_version": 0,
          "attributes": {
            "comment": "Frontend role for RDR",
            "fully_qualified_name": "\"DEV_FR_RDR_APPLICATION_NAME\"",
            "id": "DEV_FR_RDR_APPLICATION_NAME",
            "name": "DEV_FR_RDR_APPLICATION_NAME",
            "show_output": [
              {
                "assigned_to_users": 1,
                "comment": "Frontend role for RDR",
                "created_on": "2025-02-26 00:51:51.812 -0800 PST",
                "granted_roles": 0,
                "granted_to_roles": 1,
                "is_current": false,
                "is_default": false,
                "is_inherited": false,
                "name": "DEV_FR_RDR_APPLICATION_NAME",
                "owner": "ACCOUNTADMIN"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_account_role",
      "name": "schema_roles_ro",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "DWH",
          "schema_version": 0,
          "attributes": {
            "comment": "Read-only role for DWH schema",
            "fully_qualified_name": "\"AR_DWH_RO\"",
            "id": "AR_DWH_RO",
            "name": "AR_DWH_RO",
            "show_output": [
              {
                "assigned_to_users": 0,
                "comment": "Read-only role for DWH schema",
                "created_on": "2025-02-26 01:15:34.849 -0800 PST",
                "granted_roles": 0,
                "granted_to_roles": 0,
                "is_current": false,
                "is_default": false,
                "is_inherited": false,
                "name": "AR_DWH_RO",
                "owner": "ACCOUNTADMIN"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "MDL",
          "schema_version": 0,
          "attributes": {
            "comment": "Read-only role for MDL schema",
            "fully_qualified_name": "\"AR_MDL_RO\"",
            "id": "AR_MDL_RO",
            "name": "AR_MDL_RO",
            "show_output": [
              {
                "assigned_to_users": 0,
                "comment": "Read-only role for MDL schema",
                "created_on": "2025-02-26 01:15:34.643 -0800 PST",
                "granted_roles": 0,
                "granted_to_roles": 0,
                "is_current": false,
                "is_default": false,
                "is_inherited": false,
                "name": "AR_MDL_RO",
                "owner": "ACCOUNTADMIN"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "STG",
          "schema_version": 0,
          "attributes": {
            "comment": "Read-only role for STG schema",
            "fully_qualified_name": "\"AR_STG_RO\"",
            "id": "AR_STG_RO",
            "name": "AR_STG_RO",
            "show_output": [
              {
                "assigned_to_users": 0,
                "comment": "Read-only role for STG schema",
                "created_on": "2025-02-26 01:15:34.643 -0800 PST",
                "granted_roles": 0,
                "granted_to_roles": 0,
                "is_current": false,
                "is_default": false,
                "is_inherited": false,
                "name": "AR_STG_RO",
                "owner": "ACCOUNTADMIN"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_account_role",
      "name": "schema_roles_rw",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "STG",
          "schema_version": 0,
          "attributes": {
            "comment": "Read-Write role for STG schema",
            "fully_qualified_name": "\"AR_STG_RW\"",
            "id": "AR_STG_RW",
            "name": "AR_STG_RW",
            "show_output": [
              {
                "assigned_to_users": 0,
                "comment": "Read-Write role for STG schema",
                "created_on": "2025-02-26 01:19:41.837 -0800 PST",
                "granted_roles": 0,
                "granted_to_roles": 0,
                "is_current": false,
                "is_default": false,
                "is_inherited": false,
                "name": "AR_STG_RW",
                "owner": "ACCOUNTADMIN"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_account_role",
      "name": "snowflake_service_role",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "comment": "",
            "fully_qualified_name": "\"TZSYSADMIN_DEV\"",
            "id": "TZSYSADMIN_DEV",
            "name": "TZSYSADMIN_DEV",
            "show_output": [
              {
                "assigned_to_users": 0,
                "comment": "",
                "created_on": "2025-02-24 01:07:42.678 -0800 PST",
                "granted_roles": 0,
                "granted_to_roles": 1,
                "is_current": false,
                "is_default": false,
                "is_inherited": true,
                "name": "TZSYSADMIN_DEV",
                "owner": "ACCOUNTADMIN"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_account_role",
      "name": "task_operator",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "comment": "Role responsible for running tasks",
            "fully_qualified_name": "\"TASK_OPERATOR\"",
            "id": "TASK_OPERATOR",
            "name": "TASK_OPERATOR",
            "show_output": [
              {
                "assigned_to_users": 0,
                "comment": "Role responsible for running tasks",
                "created_on": "2025-02-26 00:51:51.809 -0800 PST",
                "granted_roles": 0,
                "granted_to_roles": 2,
                "is_current": false,
                "is_default": false,
                "is_inherited": false,
                "name": "TASK_OPERATOR",
                "owner": "ACCOUNTADMIN"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_account_role",
      "name": "warehouse_roles",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "ENGR",
          "schema_version": 0,
          "attributes": {
            "comment": "Role for ENGR Warehouse",
            "fully_qualified_name": "\"DEV_WR_ENGR_APPLICATION_NAME\"",
            "id": "DEV_WR_ENGR_APPLICATION_NAME",
            "name": "DEV_WR_ENGR_APPLICATION_NAME",
            "show_output": [
              {
                "assigned_to_users": 0,
                "comment": "Role for ENGR Warehouse",
                "created_on": "2025-02-26 00:51:51.953 -0800 PST",
                "granted_roles": 1,
                "granted_to_roles": 0,
                "is_current": false,
                "is_default": false,
                "is_inherited": false,
                "name": "DEV_WR_ENGR_APPLICATION_NAME",
                "owner": "ACCOUNTADMIN"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "RDR",
          "schema_version": 0,
          "attributes": {
            "comment": "Role for RDR Warehouse",
            "fully_qualified_name": "\"DEV_WR_RDR_APPLICATION_NAME\"",
            "id": "DEV_WR_RDR_APPLICATION_NAME",
            "name": "DEV_WR_RDR_APPLICATION_NAME",
            "show_output": [
              {
                "assigned_to_users": 0,
                "comment": "Role for RDR Warehouse",
                "created_on": "2025-02-26 00:51:51.809 -0800 PST",
                "granted_roles": 1,
                "granted_to_roles": 0,
                "is_current": false,
                "is_default": false,
                "is_inherited": false,
                "name": "DEV_WR_RDR_APPLICATION_NAME",
                "owner": "ACCOUNTADMIN"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "TO",
          "schema_version": 0,
          "attributes": {
            "comment": "Role for TO Warehouse",
            "fully_qualified_name": "\"DEV_WR_TO_APPLICATION_NAME\"",
            "id": "DEV_WR_TO_APPLICATION_NAME",
            "name": "DEV_WR_TO_APPLICATION_NAME",
            "show_output": [
              {
                "assigned_to_users": 0,
                "comment": "Role for TO Warehouse",
                "created_on": "2025-02-26 00:51:51.987 -0800 PST",
                "granted_roles": 1,
                "granted_to_roles": 0,
                "is_current": false,
                "is_default": false,
                "is_inherited": false,
                "name": "DEV_WR_TO_APPLICATION_NAME",
                "owner": "ACCOUNTADMIN"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_database",
      "name": "demo_db",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "catalog": "",
            "comment": "Database for Snowflake Terraform demo",
            "data_retention_time_in_days": 1,
            "default_ddl_collation": "",
            "drop_public_schema_on_creation": null,
            "enable_console_output": false,
            "external_volume": "",
            "fully_qualified_name": "\"DEV_DB_APPLICATION_NAME\"",
            "id": "DEV_DB_APPLICATION_NAME",
            "is_transient": false,
            "log_level": "OFF",
            "max_data_extension_time_in_days": 14,
            "name": "DEV_DB_APPLICATION_NAME",
            "quoted_identifiers_ignore_case": false,
            "replace_invalid_characters": false,
            "replication": [],
            "storage_serialization_policy": "OPTIMIZED",
            "suspend_task_after_num_failures": 10,
            "task_auto_retry_attempts": 0,
            "trace_level": "OFF",
            "user_task_managed_initial_warehouse_size": "Medium",
            "user_task_minimum_trigger_interval_in_seconds": 30,
            "user_task_timeout_ms": 3600000
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_account_role",
      "name": "fr_inheritance",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "ENGR",
          "schema_version": 0,
          "attributes": {
            "id": "\"DEV_FR_ENGR_APPLICATION_NAME\"|ROLE|\"DEV_WR_ENGR_APPLICATION_NAME\"",
            "parent_role_name": "DEV_WR_ENGR_APPLICATION_NAME",
            "role_name": "DEV_FR_ENGR_APPLICATION_NAME",
            "user_name": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.fr_roles"
          ]
        },
        {
          "index_key": "RDR",
          "schema_version": 0,
          "attributes": {
            "id": "\"DEV_FR_RDR_APPLICATION_NAME\"|ROLE|\"DEV_WR_RDR_APPLICATION_NAME\"",
            "parent_role_name": "DEV_WR_RDR_APPLICATION_NAME",
            "role_name": "DEV_FR_RDR_APPLICATION_NAME",
            "user_name": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.fr_roles"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_account_role",
      "name": "fr_roles_to_existing_user",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "ENGR",
          "schema_version": 0,
          "attributes": {
            "id": "\"DEV_FR_ENGR_APPLICATION_NAME\"|USER|\"PREETIMITRA\"",
            "parent_role_name": null,
            "role_name": "DEV_FR_ENGR_APPLICATION_NAME",
            "user_name": "PREETIMITRA"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "RDR",
          "schema_version": 0,
          "attributes": {
            "id": "\"DEV_FR_RDR_APPLICATION_NAME\"|USER|\"PREETIMITRA\"",
            "parent_role_name": null,
            "role_name": "DEV_FR_RDR_APPLICATION_NAME",
            "user_name": "PREETIMITRA"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_account_role",
      "name": "snowflake_role_sysadmin_grant",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "\"TZSYSADMIN_DEV\"|ROLE|\"SYSADMIN\"",
            "parent_role_name": "SYSADMIN",
            "role_name": "TZSYSADMIN_DEV",
            "user_name": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.snowflake_service_role"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_account_role",
      "name": "task_operator_inherits",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "FR_ENGR",
          "schema_version": 0,
          "attributes": {
            "id": "\"TASK_OPERATOR\"|ROLE|\"DEV_FR_ENGR_APPLICATION_NAME\"",
            "parent_role_name": "DEV_FR_ENGR_APPLICATION_NAME",
            "role_name": "TASK_OPERATOR",
            "user_name": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.task_operator"
          ]
        },
        {
          "index_key": "WR_TO",
          "schema_version": 0,
          "attributes": {
            "id": "\"TASK_OPERATOR\"|ROLE|\"DEV_WR_TO_APPLICATION_NAME\"",
            "parent_role_name": "DEV_WR_TO_APPLICATION_NAME",
            "role_name": "TASK_OPERATOR",
            "user_name": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.task_operator"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_ownership",
      "name": "ownership_to_acc_role",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "ENGR",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "TZSYSADMIN_DEV",
            "database_role_name": null,
            "id": "ToAccountRole|\"TZSYSADMIN_DEV\"||OnObject|WAREHOUSE|\"DEV_WH_ENGR_APPLICATION_NAME\"",
            "on": [
              {
                "all": [],
                "future": [],
                "object_name": "DEV_WH_ENGR_APPLICATION_NAME",
                "object_type": "WAREHOUSE"
              }
            ],
            "outbound_privileges": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_warehouse.wh"
          ]
        },
        {
          "index_key": "RDR",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "TZSYSADMIN_DEV",
            "database_role_name": null,
            "id": "ToAccountRole|\"TZSYSADMIN_DEV\"||OnObject|WAREHOUSE|\"DEV_WH_RDR_APPLICATION_NAME\"",
            "on": [
              {
                "all": [],
                "future": [],
                "object_name": "DEV_WH_RDR_APPLICATION_NAME",
                "object_type": "WAREHOUSE"
              }
            ],
            "outbound_privileges": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_warehouse.wh"
          ]
        },
        {
          "index_key": "TO",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "TZSYSADMIN_DEV",
            "database_role_name": null,
            "id": "ToAccountRole|\"TZSYSADMIN_DEV\"||OnObject|WAREHOUSE|\"DEV_WH_TO_APPLICATION_NAME\"",
            "on": [
              {
                "all": [],
                "future": [],
                "object_name": "DEV_WH_TO_APPLICATION_NAME",
                "object_type": "WAREHOUSE"
              }
            ],
            "outbound_privileges": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_warehouse.wh"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_ownership",
      "name": "test",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_role_name": "TZSYSADMIN_DEV",
            "database_role_name": null,
            "id": "ToAccountRole|\"TZSYSADMIN_DEV\"||OnObject|DATABASE|\"DEV_DB_APPLICATION_NAME\"",
            "on": [
              {
                "all": [],
                "future": [],
                "object_name": "DEV_DB_APPLICATION_NAME",
                "object_type": "DATABASE"
              }
            ],
            "outbound_privileges": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.snowflake_service_role",
            "snowflake_database.demo_db"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "db_usage_ro",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "DWH",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_DWH_RO",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_DWH_RO\"|false|false|USAGE|OnAccountObject|DATABASE|\"DEV_DB_APPLICATION_NAME\"",
            "on_account": false,
            "on_account_object": [
              {
                "object_name": "DEV_DB_APPLICATION_NAME",
                "object_type": "DATABASE"
              }
            ],
            "on_schema": [],
            "on_schema_object": [],
            "privileges": [
              "USAGE"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_ro",
            "snowflake_database.demo_db"
          ]
        },
        {
          "index_key": "MDL",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_MDL_RO",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_MDL_RO\"|false|false|USAGE|OnAccountObject|DATABASE|\"DEV_DB_APPLICATION_NAME\"",
            "on_account": false,
            "on_account_object": [
              {
                "object_name": "DEV_DB_APPLICATION_NAME",
                "object_type": "DATABASE"
              }
            ],
            "on_schema": [],
            "on_schema_object": [],
            "privileges": [
              "USAGE"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_ro",
            "snowflake_database.demo_db"
          ]
        },
        {
          "index_key": "STG",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_STG_RO",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_STG_RO\"|false|false|USAGE|OnAccountObject|DATABASE|\"DEV_DB_APPLICATION_NAME\"",
            "on_account": false,
            "on_account_object": [
              {
                "object_name": "DEV_DB_APPLICATION_NAME",
                "object_type": "DATABASE"
              }
            ],
            "on_schema": [],
            "on_schema_object": [],
            "privileges": [
              "USAGE"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_ro",
            "snowflake_database.demo_db"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "db_usage_rw",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "DWH",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_DWH_RW",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_DWH_RW\"|false|false|USAGE|OnAccountObject|DATABASE|\"DEV_DB_APPLICATION_NAME\"",
            "on_account": false,
            "on_account_object": [
              {
                "object_name": "DEV_DB_APPLICATION_NAME",
                "object_type": "DATABASE"
              }
            ],
            "on_schema": [],
            "on_schema_object": [],
            "privileges": [
              "USAGE"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_rw",
            "snowflake_database.demo_db"
          ]
        },
        {
          "index_key": "MDL",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_MDL_RW",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_MDL_RW\"|false|false|USAGE|OnAccountObject|DATABASE|\"DEV_DB_APPLICATION_NAME\"",
            "on_account": false,
            "on_account_object": [
              {
                "object_name": "DEV_DB_APPLICATION_NAME",
                "object_type": "DATABASE"
              }
            ],
            "on_schema": [],
            "on_schema_object": [],
            "privileges": [
              "USAGE"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_rw",
            "snowflake_database.demo_db"
          ]
        },
        {
          "index_key": "STG",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_STG_RW",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_STG_RW\"|false|false|USAGE|OnAccountObject|DATABASE|\"DEV_DB_APPLICATION_NAME\"",
            "on_account": false,
            "on_account_object": [
              {
                "object_name": "DEV_DB_APPLICATION_NAME",
                "object_type": "DATABASE"
              }
            ],
            "on_schema": [],
            "on_schema_object": [],
            "privileges": [
              "USAGE"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_rw",
            "snowflake_database.demo_db"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "dbt_role_raw_database_usage_grant",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_CS",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_CS\"|false|false|CREATE SCHEMA|OnAccountObject|DATABASE|\"DEV_DB_APPLICATION_NAME\"",
            "on_account": false,
            "on_account_object": [
              {
                "object_name": "DEV_DB_APPLICATION_NAME",
                "object_type": "DATABASE"
              }
            ],
            "on_schema": [],
            "on_schema_object": [],
            "privileges": [
              "CREATE SCHEMA"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_database.demo_db"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "ro_select_existing",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "DWH",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_DWH_RO",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_DWH_RO\"|false|false|SELECT|OnSchemaObject|OnAll|TABLES|InSchema|\"DEV_DB_APPLICATION_NAME\".\"DWH\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [],
            "on_schema_object": [
              {
                "all": [
                  {
                    "in_database": "",
                    "in_schema": "\"DEV_DB_APPLICATION_NAME\".\"DWH\"",
                    "object_type_plural": "TABLES"
                  }
                ],
                "future": [],
                "object_name": "",
                "object_type": ""
              }
            ],
            "privileges": [
              "SELECT"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_ro",
            "snowflake_database.demo_db",
            "snowflake_schema.schemas"
          ]
        },
        {
          "index_key": "MDL",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_MDL_RO",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_MDL_RO\"|false|false|SELECT|OnSchemaObject|OnAll|TABLES|InSchema|\"DEV_DB_APPLICATION_NAME\".\"MDL\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [],
            "on_schema_object": [
              {
                "all": [
                  {
                    "in_database": "",
                    "in_schema": "\"DEV_DB_APPLICATION_NAME\".\"MDL\"",
                    "object_type_plural": "TABLES"
                  }
                ],
                "future": [],
                "object_name": "",
                "object_type": ""
              }
            ],
            "privileges": [
              "SELECT"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_ro",
            "snowflake_database.demo_db",
            "snowflake_schema.schemas"
          ]
        },
        {
          "index_key": "STG",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_STG_RO",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_STG_RO\"|false|false|SELECT|OnSchemaObject|OnAll|TABLES|InSchema|\"DEV_DB_APPLICATION_NAME\".\"STG\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [],
            "on_schema_object": [
              {
                "all": [
                  {
                    "in_database": "",
                    "in_schema": "\"DEV_DB_APPLICATION_NAME\".\"STG\"",
                    "object_type_plural": "TABLES"
                  }
                ],
                "future": [],
                "object_name": "",
                "object_type": ""
              }
            ],
            "privileges": [
              "SELECT"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_ro",
            "snowflake_database.demo_db",
            "snowflake_schema.schemas"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "ro_select_future",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "DWH",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_DWH_RO",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_DWH_RO\"|false|false|SELECT|OnSchemaObject|OnFuture|TABLES|InSchema|\"DEV_DB_APPLICATION_NAME\".\"DWH\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [],
            "on_schema_object": [
              {
                "all": [],
                "future": [
                  {
                    "in_database": "",
                    "in_schema": "\"DEV_DB_APPLICATION_NAME\".\"DWH\"",
                    "object_type_plural": "TABLES"
                  }
                ],
                "object_name": "",
                "object_type": ""
              }
            ],
            "privileges": [
              "SELECT"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_ro",
            "snowflake_database.demo_db",
            "snowflake_schema.schemas"
          ]
        },
        {
          "index_key": "MDL",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_MDL_RO",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_MDL_RO\"|false|false|SELECT|OnSchemaObject|OnFuture|TABLES|InSchema|\"DEV_DB_APPLICATION_NAME\".\"MDL\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [],
            "on_schema_object": [
              {
                "all": [],
                "future": [
                  {
                    "in_database": "",
                    "in_schema": "\"DEV_DB_APPLICATION_NAME\".\"MDL\"",
                    "object_type_plural": "TABLES"
                  }
                ],
                "object_name": "",
                "object_type": ""
              }
            ],
            "privileges": [
              "SELECT"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_ro",
            "snowflake_database.demo_db",
            "snowflake_schema.schemas"
          ]
        },
        {
          "index_key": "STG",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_STG_RO",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_STG_RO\"|false|false|SELECT|OnSchemaObject|OnFuture|TABLES|InSchema|\"DEV_DB_APPLICATION_NAME\".\"STG\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [],
            "on_schema_object": [
              {
                "all": [],
                "future": [
                  {
                    "in_database": "",
                    "in_schema": "\"DEV_DB_APPLICATION_NAME\".\"STG\"",
                    "object_type_plural": "TABLES"
                  }
                ],
                "object_name": "",
                "object_type": ""
              }
            ],
            "privileges": [
              "SELECT"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_ro",
            "snowflake_database.demo_db",
            "snowflake_schema.schemas"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "ro_usage",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "DWH",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_DWH_RO",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_DWH_RO\"|false|false|USAGE|OnSchema|OnSchema|\"DEV_DB_APPLICATION_NAME\".\"DWH\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [
              {
                "all_schemas_in_database": "",
                "future_schemas_in_database": "",
                "schema_name": "\"DEV_DB_APPLICATION_NAME\".\"DWH\""
              }
            ],
            "on_schema_object": [],
            "privileges": [
              "USAGE"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_ro",
            "snowflake_database.demo_db",
            "snowflake_schema.schemas"
          ]
        },
        {
          "index_key": "MDL",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_MDL_RO",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_MDL_RO\"|false|false|USAGE|OnSchema|OnSchema|\"DEV_DB_APPLICATION_NAME\".\"MDL\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [
              {
                "all_schemas_in_database": "",
                "future_schemas_in_database": "",
                "schema_name": "\"DEV_DB_APPLICATION_NAME\".\"MDL\""
              }
            ],
            "on_schema_object": [],
            "privileges": [
              "USAGE"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_ro",
            "snowflake_database.demo_db",
            "snowflake_schema.schemas"
          ]
        },
        {
          "index_key": "STG",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_STG_RO",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_STG_RO\"|false|false|USAGE|OnSchema|OnSchema|\"DEV_DB_APPLICATION_NAME\".\"STG\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [
              {
                "all_schemas_in_database": "",
                "future_schemas_in_database": "",
                "schema_name": "\"DEV_DB_APPLICATION_NAME\".\"STG\""
              }
            ],
            "on_schema_object": [],
            "privileges": [
              "USAGE"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_ro",
            "snowflake_database.demo_db",
            "snowflake_schema.schemas"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "rw_privileges",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "DWH",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_DWH_RW",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_DWH_RW\"|false|false|ALL PRIVILEGES|OnSchema|OnSchema|\"DEV_DB_APPLICATION_NAME\".\"DWH\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [
              {
                "all_schemas_in_database": "",
                "future_schemas_in_database": "",
                "schema_name": "\"DEV_DB_APPLICATION_NAME\".\"DWH\""
              }
            ],
            "on_schema_object": [],
            "privileges": [
              "ALL PRIVILEGES"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_rw",
            "snowflake_database.demo_db",
            "snowflake_schema.schemas"
          ]
        },
        {
          "index_key": "MDL",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_MDL_RW",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_MDL_RW\"|false|false|ALL PRIVILEGES|OnSchema|OnSchema|\"DEV_DB_APPLICATION_NAME\".\"MDL\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [
              {
                "all_schemas_in_database": "",
                "future_schemas_in_database": "",
                "schema_name": "\"DEV_DB_APPLICATION_NAME\".\"MDL\""
              }
            ],
            "on_schema_object": [],
            "privileges": [
              "ALL PRIVILEGES"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_rw",
            "snowflake_database.demo_db",
            "snowflake_schema.schemas"
          ]
        },
        {
          "index_key": "STG",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "AR_STG_RW",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"AR_STG_RW\"|false|false|ALL PRIVILEGES|OnSchema|OnSchema|\"DEV_DB_APPLICATION_NAME\".\"STG\"",
            "on_account": false,
            "on_account_object": [],
            "on_schema": [
              {
                "all_schemas_in_database": "",
                "future_schemas_in_database": "",
                "schema_name": "\"DEV_DB_APPLICATION_NAME\".\"STG\""
              }
            ],
            "on_schema_object": [],
            "privileges": [
              "ALL PRIVILEGES"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.schema_roles_rw",
            "snowflake_database.demo_db",
            "snowflake_schema.schemas"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_grant_privileges_to_account_role",
      "name": "wh_usage",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "ENGR",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "DEV_WR_ENGR_APPLICATION_NAME",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"DEV_WR_ENGR_APPLICATION_NAME\"|false|false|USAGE|OnAccountObject|WAREHOUSE|\"DEV_WH_ENGR_APPLICATION_NAME\"",
            "on_account": false,
            "on_account_object": [
              {
                "object_name": "DEV_WH_ENGR_APPLICATION_NAME",
                "object_type": "WAREHOUSE"
              }
            ],
            "on_schema": [],
            "on_schema_object": [],
            "privileges": [
              "USAGE"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.warehouse_roles",
            "snowflake_warehouse.wh"
          ]
        },
        {
          "index_key": "RDR",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "DEV_WR_RDR_APPLICATION_NAME",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"DEV_WR_RDR_APPLICATION_NAME\"|false|false|USAGE|OnAccountObject|WAREHOUSE|\"DEV_WH_RDR_APPLICATION_NAME\"",
            "on_account": false,
            "on_account_object": [
              {
                "object_name": "DEV_WH_RDR_APPLICATION_NAME",
                "object_type": "WAREHOUSE"
              }
            ],
            "on_schema": [],
            "on_schema_object": [],
            "privileges": [
              "USAGE"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.warehouse_roles",
            "snowflake_warehouse.wh"
          ]
        },
        {
          "index_key": "TO",
          "schema_version": 0,
          "attributes": {
            "account_role_name": "DEV_WR_TO_APPLICATION_NAME",
            "all_privileges": false,
            "always_apply": false,
            "always_apply_trigger": null,
            "id": "\"DEV_WR_TO_APPLICATION_NAME\"|false|false|USAGE|OnAccountObject|WAREHOUSE|\"DEV_WH_TO_APPLICATION_NAME\"",
            "on_account": false,
            "on_account_object": [
              {
                "object_name": "DEV_WH_TO_APPLICATION_NAME",
                "object_type": "WAREHOUSE"
              }
            ],
            "on_schema": [],
            "on_schema_object": [],
            "privileges": [
              "USAGE"
            ],
            "with_grant_option": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "snowflake_account_role.warehouse_roles",
            "snowflake_warehouse.wh"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_schema",
      "name": "schemas",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "DWH",
          "schema_version": 2,
          "attributes": {
            "catalog": "",
            "comment": "",
            "data_retention_time_in_days": 1,
            "database": "DEV_DB_APPLICATION_NAME",
            "default_ddl_collation": "",
            "describe_output": [],
            "enable_console_output": false,
            "external_volume": "",
            "fully_qualified_name": "\"DEV_DB_APPLICATION_NAME\".\"DWH\"",
            "id": "\"DEV_DB_APPLICATION_NAME\".\"DWH\"",
            "is_transient": "default",
            "log_level": "OFF",
            "max_data_extension_time_in_days": 14,
            "name": "DWH",
            "parameters": [
              {
                "catalog": [
                  {
                    "default": "",
                    "description": "Name of the catalog integration to use for iceberg tables",
                    "key": "CATALOG",
                    "level": "",
                    "value": ""
                  }
                ],
                "data_retention_time_in_days": [
                  {
                    "default": "1",
                    "description": "number of days to retain the old version of deleted/updated data",
                    "key": "DATA_RETENTION_TIME_IN_DAYS",
                    "level": "",
                    "value": "1"
                  }
                ],
                "default_ddl_collation": [
                  {
                    "default": "",
                    "description": "Collation that is used for all the new columns created by the DDL statements (if not specified)",
                    "key": "DEFAULT_DDL_COLLATION",
                    "level": "",
                    "value": ""
                  }
                ],
                "enable_console_output": [
                  {
                    "default": "false",
                    "description": "Enable stdout/stderr fast path logging for anonyous stored procs. This is a public parameter (similar to LOG_LEVEL).",
                    "key": "ENABLE_CONSOLE_OUTPUT",
                    "level": "",
                    "value": "false"
                  }
                ],
                "external_volume": [
                  {
                    "default": "",
                    "description": "Name of an external volume that will be used for persisted Iceberg metadata and data files.",
                    "key": "EXTERNAL_VOLUME",
                    "level": "",
                    "value": ""
                  }
                ],
                "log_level": [
                  {
                    "default": "OFF",
                    "description": "LOG_LEVEL to use when filtering events",
                    "key": "LOG_LEVEL",
                    "level": "",
                    "value": "OFF"
                  }
                ],
                "max_data_extension_time_in_days": [
                  {
                    "default": "14",
                    "description": "Maximum number of days to extend data retention beyond the retention period to prevent a stream becoming stale.",
                    "key": "MAX_DATA_EXTENSION_TIME_IN_DAYS",
                    "level": "",
                    "value": "14"
                  }
                ],
                "pipe_execution_paused": [
                  {
                    "default": "false",
                    "description": "Pause processing of files for a pipe",
                    "key": "PIPE_EXECUTION_PAUSED",
                    "level": "",
                    "value": "false"
                  }
                ],
                "quoted_identifiers_ignore_case": [
                  {
                    "default": "false",
                    "description": "If true, the case of quoted identifiers is ignored",
                    "key": "QUOTED_IDENTIFIERS_IGNORE_CASE",
                    "level": "",
                    "value": "false"
                  }
                ],
                "replace_invalid_characters": [
                  {
                    "default": "false",
                    "description": "Replace invalid UTF-8 characters found in Iceberg table external data files with the Unicode replacement character",
                    "key": "REPLACE_INVALID_CHARACTERS",
                    "level": "",
                    "value": "false"
                  }
                ],
                "storage_serialization_policy": [
                  {
                    "default": "OPTIMIZED",
                    "description": "Storage serialization policy used for managed Iceberg table. This include encodings and compressions",
                    "key": "STORAGE_SERIALIZATION_POLICY",
                    "level": "",
                    "value": "OPTIMIZED"
                  }
                ],
                "suspend_task_after_num_failures": [
                  {
                    "default": "10",
                    "description": "How many times a task must fail in a row before it is automatically suspended. 0 disables auto-suspending.",
                    "key": "SUSPEND_TASK_AFTER_NUM_FAILURES",
                    "level": "",
                    "value": "10"
                  }
                ],
                "task_auto_retry_attempts": [
                  {
                    "default": "0",
                    "description": "Maximum Automatic Retries Allowed For A User Task",
                    "key": "TASK_AUTO_RETRY_ATTEMPTS",
                    "level": "",
                    "value": "0"
                  }
                ],
                "trace_level": [
                  {
                    "default": "OFF",
                    "description": "Trace level value to use when generating/filtering trace events",
                    "key": "TRACE_LEVEL",
                    "level": "",
                    "value": "OFF"
                  }
                ],
                "user_task_managed_initial_warehouse_size": [
                  {
                    "default": "Medium",
                    "description": "The initial size of warehouse to use for managed warehouses in the absence of history",
                    "key": "USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE",
                    "level": "",
                    "value": "Medium"
                  }
                ],
                "user_task_minimum_trigger_interval_in_seconds": [
                  {
                    "default": "30",
                    "description": "Minimum amount of time between Triggered Task executions in seconds",
                    "key": "USER_TASK_MINIMUM_TRIGGER_INTERVAL_IN_SECONDS",
                    "level": "",
                    "value": "30"
                  }
                ],
                "user_task_timeout_ms": [
                  {
                    "default": "3600000",
                    "description": "User task execution timeout in milliseconds",
                    "key": "USER_TASK_TIMEOUT_MS",
                    "level": "",
                    "value": "3600000"
                  }
                ]
              }
            ],
            "pipe_execution_paused": false,
            "quoted_identifiers_ignore_case": false,
            "replace_invalid_characters": false,
            "show_output": [
              {
                "comment": "",
                "created_on": "2025-02-26 00:51:52.242 -0800 PST",
                "database_name": "DEV_DB_APPLICATION_NAME",
                "dropped_on": "0001-01-01 00:00:00 +0000 UTC",
                "is_current": false,
                "is_default": false,
                "name": "DWH",
                "options": "",
                "owner": "ACCOUNTADMIN",
                "owner_role_type": "ROLE",
                "retention_time": "1"
              }
            ],
            "storage_serialization_policy": "OPTIMIZED",
            "suspend_task_after_num_failures": 10,
            "task_auto_retry_attempts": 0,
            "trace_level": "OFF",
            "user_task_managed_initial_warehouse_size": "Medium",
            "user_task_minimum_trigger_interval_in_seconds": 30,
            "user_task_timeout_ms": 3600000,
            "with_managed_access": "default"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "snowflake_database.demo_db"
          ]
        },
        {
          "index_key": "MDL",
          "schema_version": 2,
          "attributes": {
            "catalog": "",
            "comment": "",
            "data_retention_time_in_days": 1,
            "database": "DEV_DB_APPLICATION_NAME",
            "default_ddl_collation": "",
            "describe_output": [],
            "enable_console_output": false,
            "external_volume": "",
            "fully_qualified_name": "\"DEV_DB_APPLICATION_NAME\".\"MDL\"",
            "id": "\"DEV_DB_APPLICATION_NAME\".\"MDL\"",
            "is_transient": "default",
            "log_level": "OFF",
            "max_data_extension_time_in_days": 14,
            "name": "MDL",
            "parameters": [
              {
                "catalog": [
                  {
                    "default": "",
                    "description": "Name of the catalog integration to use for iceberg tables",
                    "key": "CATALOG",
                    "level": "",
                    "value": ""
                  }
                ],
                "data_retention_time_in_days": [
                  {
                    "default": "1",
                    "description": "number of days to retain the old version of deleted/updated data",
                    "key": "DATA_RETENTION_TIME_IN_DAYS",
                    "level": "",
                    "value": "1"
                  }
                ],
                "default_ddl_collation": [
                  {
                    "default": "",
                    "description": "Collation that is used for all the new columns created by the DDL statements (if not specified)",
                    "key": "DEFAULT_DDL_COLLATION",
                    "level": "",
                    "value": ""
                  }
                ],
                "enable_console_output": [
                  {
                    "default": "false",
                    "description": "Enable stdout/stderr fast path logging for anonyous stored procs. This is a public parameter (similar to LOG_LEVEL).",
                    "key": "ENABLE_CONSOLE_OUTPUT",
                    "level": "",
                    "value": "false"
                  }
                ],
                "external_volume": [
                  {
                    "default": "",
                    "description": "Name of an external volume that will be used for persisted Iceberg metadata and data files.",
                    "key": "EXTERNAL_VOLUME",
                    "level": "",
                    "value": ""
                  }
                ],
                "log_level": [
                  {
                    "default": "OFF",
                    "description": "LOG_LEVEL to use when filtering events",
                    "key": "LOG_LEVEL",
                    "level": "",
                    "value": "OFF"
                  }
                ],
                "max_data_extension_time_in_days": [
                  {
                    "default": "14",
                    "description": "Maximum number of days to extend data retention beyond the retention period to prevent a stream becoming stale.",
                    "key": "MAX_DATA_EXTENSION_TIME_IN_DAYS",
                    "level": "",
                    "value": "14"
                  }
                ],
                "pipe_execution_paused": [
                  {
                    "default": "false",
                    "description": "Pause processing of files for a pipe",
                    "key": "PIPE_EXECUTION_PAUSED",
                    "level": "",
                    "value": "false"
                  }
                ],
                "quoted_identifiers_ignore_case": [
                  {
                    "default": "false",
                    "description": "If true, the case of quoted identifiers is ignored",
                    "key": "QUOTED_IDENTIFIERS_IGNORE_CASE",
                    "level": "",
                    "value": "false"
                  }
                ],
                "replace_invalid_characters": [
                  {
                    "default": "false",
                    "description": "Replace invalid UTF-8 characters found in Iceberg table external data files with the Unicode replacement character",
                    "key": "REPLACE_INVALID_CHARACTERS",
                    "level": "",
                    "value": "false"
                  }
                ],
                "storage_serialization_policy": [
                  {
                    "default": "OPTIMIZED",
                    "description": "Storage serialization policy used for managed Iceberg table. This include encodings and compressions",
                    "key": "STORAGE_SERIALIZATION_POLICY",
                    "level": "",
                    "value": "OPTIMIZED"
                  }
                ],
                "suspend_task_after_num_failures": [
                  {
                    "default": "10",
                    "description": "How many times a task must fail in a row before it is automatically suspended. 0 disables auto-suspending.",
                    "key": "SUSPEND_TASK_AFTER_NUM_FAILURES",
                    "level": "",
                    "value": "10"
                  }
                ],
                "task_auto_retry_attempts": [
                  {
                    "default": "0",
                    "description": "Maximum Automatic Retries Allowed For A User Task",
                    "key": "TASK_AUTO_RETRY_ATTEMPTS",
                    "level": "",
                    "value": "0"
                  }
                ],
                "trace_level": [
                  {
                    "default": "OFF",
                    "description": "Trace level value to use when generating/filtering trace events",
                    "key": "TRACE_LEVEL",
                    "level": "",
                    "value": "OFF"
                  }
                ],
                "user_task_managed_initial_warehouse_size": [
                  {
                    "default": "Medium",
                    "description": "The initial size of warehouse to use for managed warehouses in the absence of history",
                    "key": "USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE",
                    "level": "",
                    "value": "Medium"
                  }
                ],
                "user_task_minimum_trigger_interval_in_seconds": [
                  {
                    "default": "30",
                    "description": "Minimum amount of time between Triggered Task executions in seconds",
                    "key": "USER_TASK_MINIMUM_TRIGGER_INTERVAL_IN_SECONDS",
                    "level": "",
                    "value": "30"
                  }
                ],
                "user_task_timeout_ms": [
                  {
                    "default": "3600000",
                    "description": "User task execution timeout in milliseconds",
                    "key": "USER_TASK_TIMEOUT_MS",
                    "level": "",
                    "value": "3600000"
                  }
                ]
              }
            ],
            "pipe_execution_paused": false,
            "quoted_identifiers_ignore_case": false,
            "replace_invalid_characters": false,
            "show_output": [
              {
                "comment": "",
                "created_on": "2025-02-26 00:51:52.098 -0800 PST",
                "database_name": "DEV_DB_APPLICATION_NAME",
                "dropped_on": "0001-01-01 00:00:00 +0000 UTC",
                "is_current": false,
                "is_default": false,
                "name": "MDL",
                "options": "",
                "owner": "ACCOUNTADMIN",
                "owner_role_type": "ROLE",
                "retention_time": "1"
              }
            ],
            "storage_serialization_policy": "OPTIMIZED",
            "suspend_task_after_num_failures": 10,
            "task_auto_retry_attempts": 0,
            "trace_level": "OFF",
            "user_task_managed_initial_warehouse_size": "Medium",
            "user_task_minimum_trigger_interval_in_seconds": 30,
            "user_task_timeout_ms": 3600000,
            "with_managed_access": "default"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "snowflake_database.demo_db"
          ]
        },
        {
          "index_key": "STG",
          "schema_version": 2,
          "attributes": {
            "catalog": "",
            "comment": "",
            "data_retention_time_in_days": 1,
            "database": "DEV_DB_APPLICATION_NAME",
            "default_ddl_collation": "",
            "describe_output": [],
            "enable_console_output": false,
            "external_volume": "",
            "fully_qualified_name": "\"DEV_DB_APPLICATION_NAME\".\"STG\"",
            "id": "\"DEV_DB_APPLICATION_NAME\".\"STG\"",
            "is_transient": "default",
            "log_level": "OFF",
            "max_data_extension_time_in_days": 14,
            "name": "STG",
            "parameters": [
              {
                "catalog": [
                  {
                    "default": "",
                    "description": "Name of the catalog integration to use for iceberg tables",
                    "key": "CATALOG",
                    "level": "",
                    "value": ""
                  }
                ],
                "data_retention_time_in_days": [
                  {
                    "default": "1",
                    "description": "number of days to retain the old version of deleted/updated data",
                    "key": "DATA_RETENTION_TIME_IN_DAYS",
                    "level": "",
                    "value": "1"
                  }
                ],
                "default_ddl_collation": [
                  {
                    "default": "",
                    "description": "Collation that is used for all the new columns created by the DDL statements (if not specified)",
                    "key": "DEFAULT_DDL_COLLATION",
                    "level": "",
                    "value": ""
                  }
                ],
                "enable_console_output": [
                  {
                    "default": "false",
                    "description": "Enable stdout/stderr fast path logging for anonyous stored procs. This is a public parameter (similar to LOG_LEVEL).",
                    "key": "ENABLE_CONSOLE_OUTPUT",
                    "level": "",
                    "value": "false"
                  }
                ],
                "external_volume": [
                  {
                    "default": "",
                    "description": "Name of an external volume that will be used for persisted Iceberg metadata and data files.",
                    "key": "EXTERNAL_VOLUME",
                    "level": "",
                    "value": ""
                  }
                ],
                "log_level": [
                  {
                    "default": "OFF",
                    "description": "LOG_LEVEL to use when filtering events",
                    "key": "LOG_LEVEL",
                    "level": "",
                    "value": "OFF"
                  }
                ],
                "max_data_extension_time_in_days": [
                  {
                    "default": "14",
                    "description": "Maximum number of days to extend data retention beyond the retention period to prevent a stream becoming stale.",
                    "key": "MAX_DATA_EXTENSION_TIME_IN_DAYS",
                    "level": "",
                    "value": "14"
                  }
                ],
                "pipe_execution_paused": [
                  {
                    "default": "false",
                    "description": "Pause processing of files for a pipe",
                    "key": "PIPE_EXECUTION_PAUSED",
                    "level": "",
                    "value": "false"
                  }
                ],
                "quoted_identifiers_ignore_case": [
                  {
                    "default": "false",
                    "description": "If true, the case of quoted identifiers is ignored",
                    "key": "QUOTED_IDENTIFIERS_IGNORE_CASE",
                    "level": "",
                    "value": "false"
                  }
                ],
                "replace_invalid_characters": [
                  {
                    "default": "false",
                    "description": "Replace invalid UTF-8 characters found in Iceberg table external data files with the Unicode replacement character",
                    "key": "REPLACE_INVALID_CHARACTERS",
                    "level": "",
                    "value": "false"
                  }
                ],
                "storage_serialization_policy": [
                  {
                    "default": "OPTIMIZED",
                    "description": "Storage serialization policy used for managed Iceberg table. This include encodings and compressions",
                    "key": "STORAGE_SERIALIZATION_POLICY",
                    "level": "",
                    "value": "OPTIMIZED"
                  }
                ],
                "suspend_task_after_num_failures": [
                  {
                    "default": "10",
                    "description": "How many times a task must fail in a row before it is automatically suspended. 0 disables auto-suspending.",
                    "key": "SUSPEND_TASK_AFTER_NUM_FAILURES",
                    "level": "",
                    "value": "10"
                  }
                ],
                "task_auto_retry_attempts": [
                  {
                    "default": "0",
                    "description": "Maximum Automatic Retries Allowed For A User Task",
                    "key": "TASK_AUTO_RETRY_ATTEMPTS",
                    "level": "",
                    "value": "0"
                  }
                ],
                "trace_level": [
                  {
                    "default": "OFF",
                    "description": "Trace level value to use when generating/filtering trace events",
                    "key": "TRACE_LEVEL",
                    "level": "",
                    "value": "OFF"
                  }
                ],
                "user_task_managed_initial_warehouse_size": [
                  {
                    "default": "Medium",
                    "description": "The initial size of warehouse to use for managed warehouses in the absence of history",
                    "key": "USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE",
                    "level": "",
                    "value": "Medium"
                  }
                ],
                "user_task_minimum_trigger_interval_in_seconds": [
                  {
                    "default": "30",
                    "description": "Minimum amount of time between Triggered Task executions in seconds",
                    "key": "USER_TASK_MINIMUM_TRIGGER_INTERVAL_IN_SECONDS",
                    "level": "",
                    "value": "30"
                  }
                ],
                "user_task_timeout_ms": [
                  {
                    "default": "3600000",
                    "description": "User task execution timeout in milliseconds",
                    "key": "USER_TASK_TIMEOUT_MS",
                    "level": "",
                    "value": "3600000"
                  }
                ]
              }
            ],
            "pipe_execution_paused": false,
            "quoted_identifiers_ignore_case": false,
            "replace_invalid_characters": false,
            "show_output": [
              {
                "comment": "",
                "created_on": "2025-02-26 00:51:52.095 -0800 PST",
                "database_name": "DEV_DB_APPLICATION_NAME",
                "dropped_on": "0001-01-01 00:00:00 +0000 UTC",
                "is_current": false,
                "is_default": false,
                "name": "STG",
                "options": "",
                "owner": "ACCOUNTADMIN",
                "owner_role_type": "ROLE",
                "retention_time": "1"
              }
            ],
            "storage_serialization_policy": "OPTIMIZED",
            "suspend_task_after_num_failures": 10,
            "task_auto_retry_attempts": 0,
            "trace_level": "OFF",
            "user_task_managed_initial_warehouse_size": "Medium",
            "user_task_minimum_trigger_interval_in_seconds": 30,
            "user_task_timeout_ms": 3600000,
            "with_managed_access": "default"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "snowflake_database.demo_db"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "snowflake_warehouse",
      "name": "wh",
      "provider": "provider[\"registry.terraform.io/snowflake-labs/snowflake\"]",
      "instances": [
        {
          "index_key": "ENGR",
          "schema_version": 1,
          "attributes": {
            "auto_resume": "true",
            "auto_suspend": 60,
            "comment": "Warehouse for ENGR",
            "enable_query_acceleration": "default",
            "fully_qualified_name": "\"DEV_WH_ENGR_APPLICATION_NAME\"",
            "id": "DEV_WH_ENGR_APPLICATION_NAME",
            "initially_suspended": null,
            "max_cluster_count": null,
            "max_concurrency_level": 8,
            "min_cluster_count": null,
            "name": "DEV_WH_ENGR_APPLICATION_NAME",
            "parameters": [
              {
                "max_concurrency_level": [
                  {
                    "default": "8",
                    "description": "Maximum number of SQL statements a warehouse cluster can execute concurrently before queuing them. Small SQL statements count as a fraction of 1.",
                    "key": "MAX_CONCURRENCY_LEVEL",
                    "level": "",
                    "value": "8"
                  }
                ],
                "statement_queued_timeout_in_seconds": [
                  {
                    "default": "0",
                    "description": "Timeout in seconds for queued statements: statements will automatically be canceled if they are queued on a warehouse for longer than this amount of time; disabled if set to zero.",
                    "key": "STATEMENT_QUEUED_TIMEOUT_IN_SECONDS",
                    "level": "",
                    "value": "0"
                  }
                ],
                "statement_timeout_in_seconds": [
                  {
                    "default": "172800",
                    "description": "Timeout in seconds for statements: statements are automatically canceled if they run for longer; if set to zero, max value (604800) is enforced.",
                    "key": "STATEMENT_TIMEOUT_IN_SECONDS",
                    "level": "",
                    "value": "172800"
                  }
                ]
              }
            ],
            "query_acceleration_max_scale_factor": -1,
            "resource_monitor": null,
            "scaling_policy": null,
            "show_output": [
              {
                "auto_resume": true,
                "auto_suspend": 60,
                "available": 0,
                "comment": "Warehouse for ENGR",
                "created_on": "2025-02-25 21:05:34.35 -0800 PST",
                "enable_query_acceleration": false,
                "is_current": false,
                "is_default": false,
                "max_cluster_count": 1,
                "min_cluster_count": 1,
                "name": "DEV_WH_ENGR_APPLICATION_NAME",
                "other": 0,
                "owner": "TZSYSADMIN_DEV",
                "owner_role_type": "ROLE",
                "provisioning": 0,
                "query_acceleration_max_scale_factor": 8,
                "queued": 0,
                "quiescing": 0,
                "resource_monitor": "",
                "resumed_on": "2025-02-25 21:05:34.508 -0800 PST",
                "running": 0,
                "scaling_policy": "STANDARD",
                "size": "XSMALL",
                "started_clusters": 0,
                "state": "SUSPENDED",
                "type": "STANDARD",
                "updated_on": "2025-02-25 21:05:34.508 -0800 PST"
              }
            ],
            "statement_queued_timeout_in_seconds": 0,
            "statement_timeout_in_seconds": 172800,
            "warehouse_size": "XSMALL",
            "warehouse_type": null
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        },
        {
          "index_key": "RDR",
          "schema_version": 1,
          "attributes": {
            "auto_resume": "true",
            "auto_suspend": 60,
            "comment": "Warehouse for RDR",
            "enable_query_acceleration": "default",
            "fully_qualified_name": "\"DEV_WH_RDR_APPLICATION_NAME\"",
            "id": "DEV_WH_RDR_APPLICATION_NAME",
            "initially_suspended": null,
            "max_cluster_count": null,
            "max_concurrency_level": 8,
            "min_cluster_count": null,
            "name": "DEV_WH_RDR_APPLICATION_NAME",
            "parameters": [
              {
                "max_concurrency_level": [
                  {
                    "default": "8",
                    "description": "Maximum number of SQL statements a warehouse cluster can execute concurrently before queuing them. Small SQL statements count as a fraction of 1.",
                    "key": "MAX_CONCURRENCY_LEVEL",
                    "level": "",
                    "value": "8"
                  }
                ],
                "statement_queued_timeout_in_seconds": [
                  {
                    "default": "0",
                    "description": "Timeout in seconds for queued statements: statements will automatically be canceled if they are queued on a warehouse for longer than this amount of time; disabled if set to zero.",
                    "key": "STATEMENT_QUEUED_TIMEOUT_IN_SECONDS",
                    "level": "",
                    "value": "0"
                  }
                ],
                "statement_timeout_in_seconds": [
                  {
                    "default": "172800",
                    "description": "Timeout in seconds for statements: statements are automatically canceled if they run for longer; if set to zero, max value (604800) is enforced.",
                    "key": "STATEMENT_TIMEOUT_IN_SECONDS",
                    "level": "",
                    "value": "172800"
                  }
                ]
              }
            ],
            "query_acceleration_max_scale_factor": -1,
            "resource_monitor": null,
            "scaling_policy": null,
            "show_output": [
              {
                "auto_resume": true,
                "auto_suspend": 60,
                "available": 0,
                "comment": "Warehouse for RDR",
                "created_on": "2025-02-25 21:05:34.359 -0800 PST",
                "enable_query_acceleration": false,
                "is_current": false,
                "is_default": false,
                "max_cluster_count": 1,
                "min_cluster_count": 1,
                "name": "DEV_WH_RDR_APPLICATION_NAME",
                "other": 0,
                "owner": "TZSYSADMIN_DEV",
                "owner_role_type": "ROLE",
                "provisioning": 0,
                "query_acceleration_max_scale_factor": 8,
                "queued": 0,
                "quiescing": 0,
                "resource_monitor": "",
                "resumed_on": "2025-02-25 21:05:34.513 -0800 PST",
                "running": 0,
                "scaling_policy": "STANDARD",
                "size": "XSMALL",
                "started_clusters": 0,
                "state": "SUSPENDED",
                "type": "STANDARD",
                "updated_on": "2025-02-25 21:05:34.513 -0800 PST"
              }
            ],
            "statement_queued_timeout_in_seconds": 0,
            "statement_timeout_in_seconds": 172800,
            "warehouse_size": "XSMALL",
            "warehouse_type": null
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        },
        {
          "index_key": "TO",
          "schema_version": 1,
          "attributes": {
            "auto_resume": "true",
            "auto_suspend": 60,
            "comment": "Warehouse for TO",
            "enable_query_acceleration": "default",
            "fully_qualified_name": "\"DEV_WH_TO_APPLICATION_NAME\"",
            "id": "DEV_WH_TO_APPLICATION_NAME",
            "initially_suspended": null,
            "max_cluster_count": null,
            "max_concurrency_level": 8,
            "min_cluster_count": null,
            "name": "DEV_WH_TO_APPLICATION_NAME",
            "parameters": [
              {
                "max_concurrency_level": [
                  {
                    "default": "8",
                    "description": "Maximum number of SQL statements a warehouse cluster can execute concurrently before queuing them. Small SQL statements count as a fraction of 1.",
                    "key": "MAX_CONCURRENCY_LEVEL",
                    "level": "",
                    "value": "8"
                  }
                ],
                "statement_queued_timeout_in_seconds": [
                  {
                    "default": "0",
                    "description": "Timeout in seconds for queued statements: statements will automatically be canceled if they are queued on a warehouse for longer than this amount of time; disabled if set to zero.",
                    "key": "STATEMENT_QUEUED_TIMEOUT_IN_SECONDS",
                    "level": "",
                    "value": "0"
                  }
                ],
                "statement_timeout_in_seconds": [
                  {
                    "default": "172800",
                    "description": "Timeout in seconds for statements: statements are automatically canceled if they run for longer; if set to zero, max value (604800) is enforced.",
                    "key": "STATEMENT_TIMEOUT_IN_SECONDS",
                    "level": "",
                    "value": "172800"
                  }
                ]
              }
            ],
            "query_acceleration_max_scale_factor": -1,
            "resource_monitor": null,
            "scaling_policy": null,
            "show_output": [
              {
                "auto_resume": true,
                "auto_suspend": 60,
                "available": 0,
                "comment": "Warehouse for TO",
                "created_on": "2025-02-25 21:05:34.426 -0800 PST",
                "enable_query_acceleration": false,
                "is_current": false,
                "is_default": false,
                "max_cluster_count": 1,
                "min_cluster_count": 1,
                "name": "DEV_WH_TO_APPLICATION_NAME",
                "other": 0,
                "owner": "TZSYSADMIN_DEV",
                "owner_role_type": "ROLE",
                "provisioning": 0,
                "query_acceleration_max_scale_factor": 8,
                "queued": 0,
                "quiescing": 0,
                "resource_monitor": "",
                "resumed_on": "2025-02-25 21:05:34.58 -0800 PST",
                "running": 0,
                "scaling_policy": "STANDARD",
                "size": "XSMALL",
                "started_clusters": 0,
                "state": "SUSPENDED",
                "type": "STANDARD",
                "updated_on": "2025-02-25 21:05:34.58 -0800 PST"
              }
            ],
            "statement_queued_timeout_in_seconds": 0,
            "statement_timeout_in_seconds": 172800,
            "warehouse_size": "XSMALL",
            "warehouse_type": null
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
